<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MrLee&#39;s Blog</title>
  
  
  <link href="https://arksec.net/atom.xml" rel="self"/>
  
  <link href="https://arksec.net/"/>
  <updated>2024-08-16T06:00:15.289Z</updated>
  <id>https://arksec.net/</id>
  
  <author>
    <name>MrLee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>docker搭建苹果cms</title>
    <link href="https://arksec.net/posts/f4d746ea.html"/>
    <id>https://arksec.net/posts/f4d746ea.html</id>
    <published>2024-08-01T12:00:05.000Z</published>
    <updated>2024-08-16T06:00:15.289Z</updated>
    
    <content type="html"><![CDATA[<p>首先安装docker，参考<a href="https://arksec.net/posts/f255ffad.html">这里</a><br>然后运行下面的命令</p><pre><code class="hljs plaintext">mkdir logmkdir confmkdir cmsdocker run -d  --restart=always --name nginx -p 80:80 -p 443:443 -v 自定义路径:自定义路径 -v ./conf:/etc/nginx/nginx.conf -v  ./conf/conf.d:/etc/nginx/conf.d -v ./certs:/etc/nginx/certs -v ./cms:/var/www/html -v ./log/nginx:/var/log/nginx --link php:php nginx:alpinedocker run -d --restart=always --name php -v 自定义路径:自定义路径 -v ./cms:/var/www/html kimoqi/php-fpm-all-ext:7.3docker run -d --name mysql --restart=always -v 自定义路径:自定义路径 -p 自定义端口:3306  -e MYSQL_ROOT_PASSWORD=自定义密码 -e MYSQL_USER=自定义用户名  -e MYSQL_DATABASE=自定义数据库名 mysql:5.7</code></pre><p>自行配置证书放到certs</p><pre><code class="hljs plaintext">curl https://get.acme.sh | sh~/.acme.sh/acme.sh --register-account -m xxxx@gmail.com~/.acme.sh/acme.sh --issue -d 自定义域名 --standalone~/.acme.sh/acme.sh --installcert -d 自定义域名 --key-file certs/key.pem --fullchain-file certs/cert.pem</code></pre><p>编写nginx配置文件</p><pre><code class="hljs plaintext">events &#123;    worker_connections 1024;&#125;http &#123;    include       /etc/nginx/mime.types;    default_type  application/octet-stream;    sendfile        on;    keepalive_timeout  65;        client_max_body_size 1000m;      #上传限制参数1G以内文件可上传# HTTP serverserver &#123;    listen 80;    server_name 自定义域名;    # Redirect all HTTP requests to HTTPS    return 301 https://$host$request_uri;&#125;# HTTPS serverserver &#123;    listen 443 ssl http2;    server_name 自定义域名;    # http2 on;            ssl_certificate /etc/nginx/certs/cert.pem;    ssl_certificate_key /etc/nginx/certs/key.pem;    root /var/www/html/apple;    index index.php;    rewrite ^/index.php(.*)$ /index.php?s=$1 last;       rewrite ^/vip.php(.*)$ /vip.php?s=$1 last;        rewrite ^/api.php(.*)$ /api.php?s=$1 last;     rewrite ^(.*)$ /index.php?s=$1 last;            try_files $uri $uri/ =404;        # PHP-FPM configuration    location ~ \.php$ &#123;        fastcgi_pass php:9000;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        include fastcgi_params;    &#125;&#125;&#125;</code></pre><p>下载源码</p><pre><code class="hljs plaintext">mkdir cms/applewget https://github.com/magicblack/maccms_down/raw/master/maccms10.zip &amp;&amp; apt-get install -y unzip &amp;&amp; unzip maccms10.zip &amp;&amp; rm maccms10.zip mv maccms10-master/* cms/apple</code></pre><p>下载主题</p><pre><code class="hljs plaintext">cd apple/template/ wget https://github.com/kejilion/Website_source_code/raw/main/DYXS2.zip&amp;&amp; unzip DYXS2.zip &amp;&amp; rm DYXS2.zip</code></pre><p>配置主题</p><pre><code class="hljs plaintext">cdcp cms/apple/template/DYXS2/asset/admin/Dyxs2.php cms/apple/application/admin/controller  cp cms/apple/template/DYXS2/asset/admin/dycms.html cms/apple/application/admin/view/system</code></pre><p>修改登陆文件</p><pre><code class="hljs plaintext">mv cms/apple/admin.php cms/apple/vip.php</code></pre><p>赋予权限</p><pre><code class="hljs plaintext">docker exec -it php chmod -R 777 /var/www/htmldocker exec -it nginx chmod -R 777 /var/www/htmlchmod -R 777 cms</code></pre><p>重启nginx</p><pre><code class="hljs plaintext">docker restart nginx</code></pre><p>打开https:&#x2F;&#x2F;域名&#x2F;install.php按提示安装苹果cms<br>进入首页——自定义菜单配置，输入下面文字保存<br>电影先生2.0,&#x2F;vip.php&#x2F;admin&#x2F;Dyxs2&#x2F;dyxs2set<br>接下来安装超级播放器<a href="https://wwm.lanzn.com/iSRw11x3z0wf">超级播放器</a>并上传到服务器cms&#x2F;play下，nginx配置文件</p><pre><code class="hljs plaintext"># HTTPS serverserver &#123;    listen 443 ssl http2;    server_name 自定义域名不能和第一个相同;    # http2 on;            ssl_certificate /etc/nginx/certs/cert.pem;    ssl_certificate_key /etc/nginx/certs/key.pem;    root /var/www/html/play/public;    index index.php;    rewrite ^/index.php(.*)$ /index.php?s=$1 last;       rewrite ^(.*)$ /index.php?s=$1 last;                try_files $uri $uri/ =404;        # PHP-FPM configuration    location ~ \.php$ &#123;        fastcgi_pass php:9000;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        include fastcgi_params;    &#125;&#125;</code></pre><p>赋予权限</p><pre><code class="hljs plaintext">chmod -R 777 cms</code></pre><p>打开https:&#x2F;&#x2F;域名&#x2F;安装，按照文件自带文档配置<br>解析接口配置为https:&#x2F;&#x2F;域名&#x2F;player&#x2F;index.php?code&#x3D;播放器编码&amp;if&#x3D;1&amp;url&#x3D;</p><p>下载萌兔采集插件</p><pre><code class="hljs plaintext">cd cms/applewgethttps://www.mycj.pro/upload/%E8%90%8C%E8%8A%BD%E9%87%87%E9%9B%86%E6%8F%92%E4%BB%B6Pro%20v10.7.3.zip &amp;&amp; unzip &#x27;萌芽采集插件Pro v10.7.3.zip&#x27; &amp;&amp; rm &#x27;萌芽采集插件Pro v10.7.3.zip&#x27;docker exec -it php chmod -R 777 /var/www/htmldocker exec -it nginx chmod -R 777 /var/www/htmlchmod -R 777 cms</code></pre><p>在后台 点击应用——应用市场，找到萌芽插件点击启用，刷新后可在首页左下角找到萌芽采集资源，点击绑定分类，可自动设置分类，点击播放配置修改成https:&#x2F;&#x2F;域名&#x2F;player&#x2F;index.php?code&#x3D;播放器编码&amp;if&#x3D;1&amp;url&#x3D;<br>点击采集内容</p><p>最后大功告成<br>记得屏蔽进行IP限制</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先安装docker，参考&lt;a href=&quot;https://arksec.net/posts/f255ffad.html&quot;&gt;这里&lt;/a&gt;&lt;br&gt;然后运行下面的命令&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs plaintext&quot;&gt;mkdir log
mkdir c</summary>
      
    
    
    
    
    <category term="docker" scheme="https://arksec.net/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>alist</title>
    <link href="https://arksec.net/posts/7fc8ee4.html"/>
    <id>https://arksec.net/posts/7fc8ee4.html</id>
    <published>2024-02-14T03:57:05.000Z</published>
    <updated>2024-08-16T05:54:07.775Z</updated>
    
    <content type="html"><![CDATA[<h4 id="alist一键搭建教程"><a href="#alist一键搭建教程" class="headerlink" title="alist一键搭建教程"></a>alist一键搭建教程</h4><h5 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h5><pre><code class="hljs plaintext">#首先安装nginx方便反向代理apt install nginx</code></pre><h5 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h5><pre><code class="hljs plaintext">curl https://get.acme.sh | sh -s email=my@example.combash ~/.acme.sh/acme.sh --issue -d &quot;域名&quot; --standalone -k ec-256bash ~/.acme.sh/acme.sh --install-cert -d &quot;域名&quot; --key-file /root/private.key --fullchain-file /root/cert.crt --ecc</code></pre><h5 id="编写nginx配置文件"><a href="#编写nginx配置文件" class="headerlink" title="编写nginx配置文件"></a>编写nginx配置文件</h5><pre><code class="hljs plaintext">#vim /etc/nginx/conf.d/test.confserver &#123;    listen 443 ssl default_server;    listen [::]:443 ssl default_server;    ssl_reject_handshake on;&#125;server &#123;    listen 443 ssl;    listen [::]:443 ssl;    server_name example.com;  #域名    ssl_certificate example.com.crt; #证书    ssl_certificate_key example.com.key;#证书密钥&#125;location / &#123;  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  proxy_set_header X-Forwarded-Proto $scheme;  proxy_set_header Host $http_host;  proxy_set_header X-Real-IP $remote_addr;  proxy_set_header Range $http_range; proxy_set_header If-Range $http_if_range;  proxy_redirect off;  proxy_pass http://127.0.0.1:5244;  # the max size of file to upload  client_max_body_size 20000m;&#125;</code></pre><h5 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h5><pre><code class="hljs plaintext">curl -sSL https://get.docker.com/ | shsystemctl start dockersystemctl enable docker</code></pre><h5 id="安装alist"><a href="#安装alist" class="headerlink" title="安装alist"></a>安装alist</h5><pre><code class="hljs plaintext">docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist-aria2:latest</code></pre><h5 id="添加一起看功能"><a href="#添加一起看功能" class="headerlink" title="添加一起看功能"></a>添加一起看功能</h5><pre><code class="hljs plaintext">#alist后台&gt;全局设置&lt;script src=&quot;https://2gether.video/release/extension.website.user.js&quot;&gt;&lt;/script&gt;&lt;script&gt;document.addEventListener(&quot;DOMContentLoaded&quot;, () =&gt; &#123;  const seAList = document.createElement(&quot;style&quot;);  seAList.innerHTML = `    .left-toolbar-box &#123;        left: var(--hope-space-5);        right: auto;    &#125;`;  document.body.appendChild(seAList);&#125;);&lt;/script&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;alist一键搭建教程&quot;&gt;&lt;a href=&quot;#alist一键搭建教程&quot; class=&quot;headerlink&quot; title=&quot;alist一键搭建教程&quot;&gt;&lt;/a&gt;alist一键搭建教程&lt;/h4&gt;&lt;h5 id=&quot;安装nginx&quot;&gt;&lt;a href=&quot;#安装nginx&quot; c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>cobaltstrike免杀记录</title>
    <link href="https://arksec.net/posts/c16c6dcf.html"/>
    <id>https://arksec.net/posts/c16c6dcf.html</id>
    <published>2024-02-01T06:12:19.000Z</published>
    <updated>2024-08-16T05:51:36.373Z</updated>
    
    <content type="html"><![CDATA[<p>待更新。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;待更新。。。&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="cs,免杀,Web安全" scheme="https://arksec.net/tags/cs-%E5%85%8D%E6%9D%80-Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>ipv6</title>
    <link href="https://arksec.net/posts/8544442c.html"/>
    <id>https://arksec.net/posts/8544442c.html</id>
    <published>2023-12-14T02:15:32.000Z</published>
    <updated>2024-08-16T05:57:29.453Z</updated>
    
    <content type="html"><![CDATA[<p>之前收了个server-factory的v6小鸡，记录一下折腾历史。<br>首先让小鸡支持访问ipv4的网站，</p><pre><code class="hljs plaintext">mv /etc/resolv.conf /etc/resolv.conf.bak &amp;&amp; echo -e &quot;nameserver 2001:67c:2b0::4\nnameserver 2001:67c:2b0::6&quot; &gt; /etc/resolv.conf</code></pre><p>然后就安装warp添加ipv4</p><pre><code class="hljs plaintext">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh 4 Lisence 设备名#参考https://gitlab.com/fscarmen/warp/-/blob/main/README.md#warp-%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前收了个server-factory的v6小鸡，记录一下折腾历史。&lt;br&gt;首先让小鸡支持访问ipv4的网站，&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs plaintext&quot;&gt;mv /etc/resolv.conf /etc/resolv.conf.bak &amp;a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>vps</title>
    <link href="https://arksec.net/posts/490e9480.html"/>
    <id>https://arksec.net/posts/490e9480.html</id>
    <published>2023-05-29T03:39:53.000Z</published>
    <updated>2024-08-16T06:01:43.192Z</updated>
    
    <content type="html"><![CDATA[<h4 id="修改ssh端口"><a href="#修改ssh端口" class="headerlink" title="修改ssh端口"></a>修改ssh端口</h4><pre><code class="hljs bash">sed -i <span class="hljs-string">&quot;s/#Port 22/Port 38752/g&quot;</span> /etc/ssh/sshd_config<span class="hljs-comment">#或者使用脚本</span>wget https://www.moerats.com/usr/down/sshport.shbash sshport.shservice ssh restart</code></pre><h4 id="添加Swap虚拟内存"><a href="#添加Swap虚拟内存" class="headerlink" title="添加Swap虚拟内存"></a>添加Swap虚拟内存</h4><pre><code class="hljs bash">wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh</code></pre><h4 id="防ssh爆破"><a href="#防ssh爆破" class="headerlink" title="防ssh爆破"></a>防ssh爆破</h4><pre><code class="hljs bash">apt install iptables fail2ban -yvim /etc/fail2ban/jail.d/jail.localservice fail2ban restartservice fail2ban status<span class="hljs-comment">#jail.local</span>[sshd]port = 38752maxretry = 3bantime = 6d</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;修改ssh端口&quot;&gt;&lt;a href=&quot;#修改ssh端口&quot; class=&quot;headerlink&quot; title=&quot;修改ssh端口&quot;&gt;&lt;/a&gt;修改ssh端口&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sed -i &lt;span class=&quot;hljs</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>docker</title>
    <link href="https://arksec.net/posts/f255ffad.html"/>
    <id>https://arksec.net/posts/f255ffad.html</id>
    <published>2023-05-29T03:38:17.000Z</published>
    <updated>2024-08-16T05:56:19.799Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="hljs bash"><span class="hljs-comment">#install</span>curl -sSL https://get.docker.com/ | shsystemctl start dockersystemctl <span class="hljs-built_in">enable</span> docker<span class="hljs-comment">#remove</span>docker stop $(docker ps -a -q)docker <span class="hljs-built_in">rm</span> $(docker ps -a -q)docker rmi $(docker images -q)apt purge docker docker-engine docker.io containerd runc  docker-ce-cli docker-ce</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#install&lt;/span&gt;
curl -sSL https://get.docker.com/ | sh
systemctl start docker
system</summary>
      
    
    
    
    
  </entry>
  
</feed>
