<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker搭建苹果cms</title>
      <link href="/posts/f4d746ea.html"/>
      <url>/posts/f4d746ea.html</url>
      
        <content type="html"><![CDATA[<p>首先安装docker，参考<a href="https://arksec.net/posts/f255ffad.html">这里</a><br>然后运行下面的命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir log</span><br><span class="line">mkdir conf</span><br><span class="line">mkdir cms</span><br><span class="line">docker run -d  --restart=always --name nginx -p 80:80 -p 443:443 -v 自定义路径:自定义路径 -v ./conf:/etc/nginx/nginx.conf -v  ./conf/conf.d:/etc/nginx/conf.d -v ./certs:/etc/nginx/certs -v ./cms:/var/www/html -v ./log/nginx:/var/log/nginx --link php:php nginx:alpine</span><br><span class="line"></span><br><span class="line">docker run -d --restart=always --name php -v 自定义路径:自定义路径 -v ./cms:/var/www/html kimoqi/php-fpm-all-ext:7.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -d --name mysql --restart=always -v 自定义路径:自定义路径 -p 自定义端口:3306  -e MYSQL_ROOT_PASSWORD=自定义密码 -e MYSQL_USER=自定义用户名  -e MYSQL_DATABASE=自定义数据库名 mysql:5.7</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>自行配置证书放到certs</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://get.acme.sh | sh</span><br><span class="line"></span><br><span class="line">~/.acme.sh/acme.sh --register-account -m xxxx@gmail.com</span><br><span class="line"></span><br><span class="line">~/.acme.sh/acme.sh --issue -d 自定义域名 --standalone</span><br><span class="line"></span><br><span class="line">~/.acme.sh/acme.sh --installcert -d 自定义域名 --key-file certs/key.pem --fullchain-file certs/cert.pem</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写nginx配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    </span><br><span class="line">    client_max_body_size 1000m;  </span><br><span class="line">    #上传限制参数1G以内文件可上传</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># HTTP server</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 自定义域名;</span><br><span class="line"></span><br><span class="line">    # Redirect all HTTP requests to HTTPS</span><br><span class="line">    return 301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># HTTPS server</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    server_name 自定义域名;</span><br><span class="line"></span><br><span class="line">    # http2 on;</span><br><span class="line">        </span><br><span class="line">    ssl_certificate /etc/nginx/certs/cert.pem;</span><br><span class="line">    ssl_certificate_key /etc/nginx/certs/key.pem;</span><br><span class="line"></span><br><span class="line">    root /var/www/html/apple;</span><br><span class="line">    index index.php;</span><br><span class="line"></span><br><span class="line">    rewrite ^/index.php(.*)$ /index.php?s=$1 last;   </span><br><span class="line">    rewrite ^/vip.php(.*)$ /vip.php?s=$1 last;    </span><br><span class="line">    rewrite ^/api.php(.*)$ /api.php?s=$1 last; </span><br><span class="line">    rewrite ^(.*)$ /index.php?s=$1 last;</span><br><span class="line">        </span><br><span class="line">    try_files $uri $uri/ =404;</span><br><span class="line">    </span><br><span class="line">    # PHP-FPM configuration</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        fastcgi_pass php:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下载源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir cms/apple</span><br><span class="line">wget https://github.com/magicblack/maccms_down/raw/master/maccms10.zip &amp;&amp; apt-get install -y unzip &amp;&amp; unzip maccms10.zip &amp;&amp; rm maccms10.zip </span><br><span class="line">mv maccms10-master/* cms/apple</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下载主题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd apple/template/ </span><br><span class="line">wget https://github.com/kejilion/Website_source_code/raw/main/DYXS2.zip&amp;&amp; unzip DYXS2.zip &amp;&amp; rm DYXS2.zip</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置主题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd</span><br><span class="line">cp cms/apple/template/DYXS2/asset/admin/Dyxs2.php cms/apple/application/admin/controller</span><br><span class="line"> </span><br><span class="line"> cp cms/apple/template/DYXS2/asset/admin/dycms.html cms/apple/application/admin/view/system</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改登陆文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mv cms/apple/admin.php cms/apple/vip.php</span><br></pre></td></tr></table></figure><p>赋予权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it php chmod -R 777 /var/www/html</span><br><span class="line"></span><br><span class="line">docker exec -it nginx chmod -R 777 /var/www/html</span><br><span class="line"></span><br><span class="line">chmod -R 777 cms</span><br></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker restart nginx</span><br></pre></td></tr></table></figure><p>打开https:&#x2F;&#x2F;域名&#x2F;install.php按提示安装苹果cms<br>进入首页——自定义菜单配置，输入下面文字保存<br>电影先生2.0,&#x2F;vip.php&#x2F;admin&#x2F;Dyxs2&#x2F;dyxs2set<br>接下来安装超级播放器<a href="https://wwm.lanzn.com/iSRw11x3z0wf">超级播放器</a>并上传到服务器cms&#x2F;play下，nginx配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HTTPS server</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl http2;</span><br><span class="line">    server_name 自定义域名不能和第一个相同;</span><br><span class="line"></span><br><span class="line">    # http2 on;</span><br><span class="line">        </span><br><span class="line">    ssl_certificate /etc/nginx/certs/cert.pem;</span><br><span class="line">    ssl_certificate_key /etc/nginx/certs/key.pem;</span><br><span class="line"></span><br><span class="line">    root /var/www/html/play/public;</span><br><span class="line">    index index.php;</span><br><span class="line"></span><br><span class="line">    rewrite ^/index.php(.*)$ /index.php?s=$1 last;   </span><br><span class="line">    rewrite ^(.*)$ /index.php?s=$1 last;</span><br><span class="line">    </span><br><span class="line">        </span><br><span class="line">    try_files $uri $uri/ =404;</span><br><span class="line">    </span><br><span class="line">    # PHP-FPM configuration</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        fastcgi_pass php:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>赋予权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod -R 777 cms</span><br></pre></td></tr></table></figure><p>打开https:&#x2F;&#x2F;域名&#x2F;安装，按照文件自带文档配置<br>解析接口配置为https:&#x2F;&#x2F;域名&#x2F;player&#x2F;index.php?code&#x3D;播放器编码&amp;if&#x3D;1&amp;url&#x3D;</p><p>下载萌兔采集插件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd cms/apple</span><br><span class="line">wget</span><br><span class="line">https://www.mycj.pro/upload/%E8%90%8C%E8%8A%BD%E9%87%87%E9%9B%86%E6%8F%92%E4%BB%B6Pro%20v10.7.3.zip &amp;&amp; unzip &#x27;萌芽采集插件Pro v10.7.3.zip&#x27; &amp;&amp; rm &#x27;萌芽采集插件Pro v10.7.3.zip&#x27;</span><br><span class="line">docker exec -it php chmod -R 777 /var/www/html</span><br><span class="line"></span><br><span class="line">docker exec -it nginx chmod -R 777 /var/www/html</span><br><span class="line"></span><br><span class="line">chmod -R 777 cms</span><br></pre></td></tr></table></figure><p>在后台 点击应用——应用市场，找到萌芽插件点击启用，刷新后可在首页左下角找到萌芽采集资源，点击绑定分类，可自动设置分类，点击播放配置修改成https:&#x2F;&#x2F;域名&#x2F;player&#x2F;index.php?code&#x3D;播放器编码&amp;if&#x3D;1&amp;url&#x3D;<br>点击采集内容</p><p>最后大功告成<br>记得屏蔽进行IP限制</p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alist</title>
      <link href="/posts/7fc8ee4.html"/>
      <url>/posts/7fc8ee4.html</url>
      
        <content type="html"><![CDATA[<h4 id="alist一键搭建教程"><a href="#alist一键搭建教程" class="headerlink" title="alist一键搭建教程"></a>alist一键搭建教程</h4><h5 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#首先安装nginx方便反向代理</span><br><span class="line">apt install nginx</span><br></pre></td></tr></table></figure><h5 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://get.acme.sh | sh -s email=my@example.com</span><br><span class="line">bash ~/.acme.sh/acme.sh --issue -d &quot;域名&quot; --standalone -k ec-256</span><br><span class="line">bash ~/.acme.sh/acme.sh --install-cert -d &quot;域名&quot; --key-file /root/private.key --fullchain-file /root/cert.crt --ecc</span><br></pre></td></tr></table></figure><h5 id="编写nginx配置文件"><a href="#编写nginx配置文件" class="headerlink" title="编写nginx配置文件"></a>编写nginx配置文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#vim /etc/nginx/conf.d/test.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl default_server;</span><br><span class="line">    listen [::]:443 ssl default_server;</span><br><span class="line">    ssl_reject_handshake on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line">    server_name example.com;  #域名</span><br><span class="line">    ssl_certificate example.com.crt; #证书</span><br><span class="line">    ssl_certificate_key example.com.key;#证书密钥</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">  proxy_set_header Host $http_host;</span><br><span class="line">  proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">  proxy_set_header Range $http_range;</span><br><span class="line">proxy_set_header If-Range $http_if_range;</span><br><span class="line">  proxy_redirect off;</span><br><span class="line">  proxy_pass http://127.0.0.1:5244;</span><br><span class="line">  # the max size of file to upload</span><br><span class="line">  client_max_body_size 20000m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.docker.com/ | sh</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><h5 id="安装alist"><a href="#安装alist" class="headerlink" title="安装alist"></a>安装alist</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist-aria2:latest</span><br></pre></td></tr></table></figure><h5 id="添加一起看功能"><a href="#添加一起看功能" class="headerlink" title="添加一起看功能"></a>添加一起看功能</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#alist后台&gt;全局设置</span><br><span class="line">&lt;script src=&quot;https://2gether.video/release/extension.website.user.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.addEventListener(&quot;DOMContentLoaded&quot;, () =&gt; &#123;</span><br><span class="line">  const seAList = document.createElement(&quot;style&quot;);</span><br><span class="line"></span><br><span class="line">  seAList.innerHTML = `</span><br><span class="line">    .left-toolbar-box &#123;</span><br><span class="line">        left: var(--hope-space-5);</span><br><span class="line">        right: auto;</span><br><span class="line">    &#125;</span><br><span class="line">`;</span><br><span class="line"></span><br><span class="line">  document.body.appendChild(seAList);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cobaltstrike免杀记录</title>
      <link href="/posts/c16c6dcf.html"/>
      <url>/posts/c16c6dcf.html</url>
      
        <content type="html"><![CDATA[<p>待更新。。。</p>]]></content>
      
      
      
        <tags>
            
            <tag> cs,免杀,Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipv6</title>
      <link href="/posts/8544442c.html"/>
      <url>/posts/8544442c.html</url>
      
        <content type="html"><![CDATA[<p>之前收了个server-factory的v6小鸡，记录一下折腾历史。<br>首先让小鸡支持访问ipv4的网站，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv /etc/resolv.conf /etc/resolv.conf.bak &amp;&amp; echo -e &quot;nameserver 2001:67c:2b0::4\nnameserver 2001:67c:2b0::6&quot; &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure><p>然后就安装warp添加ipv4</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh 4 Lisence 设备名</span><br><span class="line">#参考https://gitlab.com/fscarmen/warp/-/blob/main/README.md#warp-%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vps</title>
      <link href="/posts/490e9480.html"/>
      <url>/posts/490e9480.html</url>
      
        <content type="html"><![CDATA[<h4 id="修改ssh端口"><a href="#修改ssh端口" class="headerlink" title="修改ssh端口"></a>修改ssh端口</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/#Port 22/Port 38752/g&quot;</span> /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#或者使用脚本</span></span><br><span class="line">wget https://www.moerats.com/usr/down/sshport.sh</span><br><span class="line">bash sshport.sh</span><br><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><h4 id="添加Swap虚拟内存"><a href="#添加Swap虚拟内存" class="headerlink" title="添加Swap虚拟内存"></a>添加Swap虚拟内存</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><h4 id="防ssh爆破"><a href="#防ssh爆破" class="headerlink" title="防ssh爆破"></a>防ssh爆破</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install iptables fail2ban -y</span><br><span class="line">vim /etc/fail2ban/jail.d/jail.local</span><br><span class="line">service fail2ban restart</span><br><span class="line">service fail2ban status</span><br><span class="line"></span><br><span class="line"><span class="comment">#jail.local</span></span><br><span class="line">[sshd]</span><br><span class="line">port = 38752</span><br><span class="line">maxretry = 3</span><br><span class="line">bantime = 6d</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/posts/f255ffad.html"/>
      <url>/posts/f255ffad.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#install</span></span><br><span class="line">curl -sSL https://get.docker.com/ | sh</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"><span class="comment">#remove</span></span><br><span class="line">docker stop $(docker ps -a -q)</span><br><span class="line">docker <span class="built_in">rm</span> $(docker ps -a -q)</span><br><span class="line">docker rmi $(docker images -q)</span><br><span class="line"></span><br><span class="line">apt purge docker docker-engine docker.io containerd runc  docker-ce-cli docker-ce</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
