<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>alist</title>
      <link href="/posts/7fc8ee4.html"/>
      <url>/posts/7fc8ee4.html</url>
      
        <content type="html"><![CDATA[<h4 id="alist一键搭建教程"><a href="#alist一键搭建教程" class="headerlink" title="alist一键搭建教程"></a>alist一键搭建教程</h4><h5 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#首先安装nginx方便反向代理</span><br><span class="line">apt install nginx</span><br></pre></td></tr></table></figure><h5 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://get.acme.sh | sh -s email=my@example.com</span><br><span class="line">bash ~/.acme.sh/acme.sh --issue -d &quot;域名&quot; --standalone -k ec-256</span><br><span class="line">bash ~/.acme.sh/acme.sh --install-cert -d &quot;域名&quot; --key-file /root/private.key --fullchain-file /root/cert.crt --ecc</span><br></pre></td></tr></table></figure><h5 id="编写nginx配置文件"><a href="#编写nginx配置文件" class="headerlink" title="编写nginx配置文件"></a>编写nginx配置文件</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#vim /etc/nginx/conf.d/test.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl default_server;</span><br><span class="line">    listen [::]:443 ssl default_server;</span><br><span class="line">    ssl_reject_handshake on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    listen [::]:443 ssl;</span><br><span class="line">    server_name example.com;  #域名</span><br><span class="line">    ssl_certificate example.com.crt; #证书</span><br><span class="line">    ssl_certificate_key example.com.key;#证书密钥</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">  proxy_set_header Host $http_host;</span><br><span class="line">  proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">  proxy_set_header Range $http_range;</span><br><span class="line">proxy_set_header If-Range $http_if_range;</span><br><span class="line">  proxy_redirect off;</span><br><span class="line">  proxy_pass http://127.0.0.1:5244;</span><br><span class="line">  # the max size of file to upload</span><br><span class="line">  client_max_body_size 20000m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.docker.com/ | sh</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><h5 id="安装alist"><a href="#安装alist" class="headerlink" title="安装alist"></a>安装alist</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist-aria2:latest</span><br></pre></td></tr></table></figure><h5 id="添加一起看功能"><a href="#添加一起看功能" class="headerlink" title="添加一起看功能"></a>添加一起看功能</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#alist后台&gt;全局设置</span><br><span class="line">&lt;script src=&quot;https://2gether.video/release/extension.website.user.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.addEventListener(&quot;DOMContentLoaded&quot;, () =&gt; &#123;</span><br><span class="line">  const seAList = document.createElement(&quot;style&quot;);</span><br><span class="line"></span><br><span class="line">  seAList.innerHTML = `</span><br><span class="line">    .left-toolbar-box &#123;</span><br><span class="line">        left: var(--hope-space-5);</span><br><span class="line">        right: auto;</span><br><span class="line">    &#125;</span><br><span class="line">`;</span><br><span class="line"></span><br><span class="line">  document.body.appendChild(seAList);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cobaltstrike免杀记录</title>
      <link href="/posts/c16c6dcf.html"/>
      <url>/posts/c16c6dcf.html</url>
      
        <content type="html"><![CDATA[<p>待更新。。。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ipv6</title>
      <link href="/posts/8544442c.html"/>
      <url>/posts/8544442c.html</url>
      
        <content type="html"><![CDATA[<p>之前收了个server-factory的v6小鸡，记录一下折腾历史。<br>首先让小鸡支持访问ipv4的网站，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv /etc/resolv.conf /etc/resolv.conf.bak &amp;&amp; echo -e &quot;nameserver 2001:67c:2b0::4\nnameserver 2001:67c:2b0::6&quot; &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure><p>然后就安装warp添加ipv4</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh 4 Lisence 设备名</span><br><span class="line">#参考https://gitlab.com/fscarmen/warp/-/blob/main/README.md#warp-%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vps</title>
      <link href="/posts/490e9480.html"/>
      <url>/posts/490e9480.html</url>
      
        <content type="html"><![CDATA[<h4 id="修改ssh端口"><a href="#修改ssh端口" class="headerlink" title="修改ssh端口"></a>修改ssh端口</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/#Port 22/Port 38752/g&quot;</span> /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#或者使用脚本</span></span><br><span class="line">wget https://www.moerats.com/usr/down/sshport.sh</span><br><span class="line">bash sshport.sh</span><br><span class="line">service ssh restart</span><br></pre></td></tr></table></figure><h4 id="添加Swap虚拟内存"><a href="#添加Swap虚拟内存" class="headerlink" title="添加Swap虚拟内存"></a>添加Swap虚拟内存</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure><h4 id="防ssh爆破"><a href="#防ssh爆破" class="headerlink" title="防ssh爆破"></a>防ssh爆破</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install iptables fail2ban -y</span><br><span class="line">vim /etc/fail2ban/jail.d/jail.local</span><br><span class="line">service fail2ban restart</span><br><span class="line">service fail2ban status</span><br><span class="line"></span><br><span class="line"><span class="comment">#jail.local</span></span><br><span class="line">[sshd]</span><br><span class="line">port = 38752</span><br><span class="line">maxretry = 3</span><br><span class="line">bantime = 6d</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/posts/f255ffad.html"/>
      <url>/posts/f255ffad.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#install</span></span><br><span class="line">curl -sSL https://get.docker.com/ | sh</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"><span class="comment">#remove</span></span><br><span class="line">docker stop $(docker ps -a -q)</span><br><span class="line">docker <span class="built_in">rm</span> $(docker ps -a -q)</span><br><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
